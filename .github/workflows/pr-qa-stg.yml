name: QA & STG CI Pipeline

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

jobs:
  build-qa:
    name: Build QA
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - run: npm install

  deploy-qa:
    name: Deploy QA
    runs-on: ubuntu-latest
    needs: test-qa
    if: ${{ needs.test-qa.result == 'success' }}

    steps:
    - name: Deploy QA
      run: echo "✅ QA passed! Deploying to QA environment..."

  test-qa:
    name: Test QA
    runs-on: ubuntu-latest
    needs: build-qa

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - run: npm install
    
    - name: Start QA server
      run: |
        node server.js &
        sleep 3
    
    - name: Run QA health check
      run: |
        chmod +x test.sh
        ./test.sh
    
    - name: Stop QA server
      run: pkill -f "node server.js" || true

  build-stg:
    name: Build STG
    runs-on: ubuntu-latest
    needs: deploy-qa

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - run: npm install

  test-stg:
    name: Test STG
    runs-on: ubuntu-latest
    needs: build-stg

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - run: npm install
    
    - name: Start STG server
      run: |
        node server.js &
        sleep 3
    
    - name: Run STG health check
      run: |
        chmod +x test.sh
        ./test.sh
    
    - name: Stop STG server
      run: pkill -f "node server.js" || true

  deploy-stg:
    name: Deploy STG
    runs-on: ubuntu-latest
    needs: test-stg
    if: ${{ needs.test-stg.result == 'success' }}

    steps:
    - name: Deploy STG
      run: echo "✅ STG passed! Deploying to STG environment..."
