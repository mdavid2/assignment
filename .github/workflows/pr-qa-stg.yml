name: QA & STG CI Pipeline

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

jobs:
  build-qa:
    name: Build QA
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - run: npm install

  deploy-qa:
    name: Deploy QA
    runs-on: ubuntu-latest
    needs: build-qa
    if: ${{ needs.build-qa.result == 'success' }}

    steps:
    - name: Deploy QA
      run: echo "Deploying to QA environment..."

  test-sanity-qa:
    name: Test QA sanity
    runs-on: ubuntu-latest
    needs: deploy-qa
    if: ${{ needs.deploy-qa.result == 'success' }}

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - run: npm install
    
    - name: Start QA server
      run: |
        node server.js &
        sleep 3
    
    - name: Run QA health check
      run: |
        chmod +x __tests__/sanity.sh
        __tests__/sanity.sh
    
    - name: Stop QA server
      run: pkill -f "node server.js" || true

  test-functional-qa:
    name: Functional Tests QA
    runs-on: ubuntu-latest
    needs: test-sanity-qa
    if: ${{ needs.test-sanity-qa.result == 'success' }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Install dependencies
      run: npm install

    - name: Run functional test suite
      run: |
        npm run test:functional || echo "Functional tests failed"

  rollback-qa:
    name: Rollback QA
    runs-on: ubuntu-latest
    needs: test-sanity-qa
    if: ${{ needs.test-sanity-qa.result == 'failure' }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
  
    - name: Checkout stable qa commit
      run: |
        git fetch --tags
        echo "Rolling back to qa-stable"
        git checkout qa-stable
        # deploy to QA

  tag-qa:
    name: Tag QA Release
    runs-on: ubuntu-latest
    needs: test-sanity-qa
    if: ${{ needs.test-sanity-qa.result == 'success' }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Tag successful QA release
      run: |
        SHORT_SHA=$(git rev-parse --short HEAD)
        DATE=$(date +'%d%m%Y')
        VERSION_TAG="qa-${DATE}-${SHORT_SHA}"
  
        echo "Creating version tag: $VERSION_TAG"
        git config --global user.email "ci-bot@github.com"
        git config --global user.name "CI Bot"
        git tag $VERSION_TAG
  
        echo "Updating floating tag: qa-stable"
        git tag -f qa-stable
  
        git push origin $VERSION_TAG
        git push origin -f qa-stable
  
  build-stg:
    name: Build STG
    runs-on: ubuntu-latest
    needs: test-sanity-qa
    if: ${{ needs.test-sanity-qa.result == 'success' }}

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - run: npm install

  deploy-stg:
    name: Deploy STG
    runs-on: ubuntu-latest
    needs: build-stg
    if: ${{ needs.build-stg.result == 'success' }}

    steps:
    - name: Deploy STG
      run: echo "Deploying to STG environment..."
      
  test-sanity-stg:
    name: Test STG
    runs-on: ubuntu-latest
    needs: deploy-stg
    if: ${{ needs.deploy-stg.result == 'success' }}

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - run: npm install
    
    - name: Start STG server
      run: |
        node server.js &
        sleep 3
    
    - name: Run STG health check
      run: |
        chmod +x __tests__/sanity.sh
        __tests__/sanity.sh
    
    - name: Stop STG server
      run: pkill -f "node server.js" || true
  
  rollback-stg:
    name: Rollback STG
    runs-on: ubuntu-latest
    needs: test-sanity-stg
    if: ${{ needs.test-sanity-stg.result == 'failure' }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
  
    - name: Checkout stable stg commit
      run: |
        git fetch --tags
        echo "Rolling back to stg-stable"
        git checkout stg-stable
        # deploy to STG

  tag-stg:
    name: Tag STG Release
    runs-on: ubuntu-latest
    needs: test-sanity-stg
    if: ${{ needs.test-sanity-stg.result == 'success' }}
    environment: STG
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Tag successful STG release
      run: |
        SHORT_SHA=$(git rev-parse --short HEAD)
        DATE=$(date +'%d%m%Y')
        VERSION_TAG="stg-${DATE}-${SHORT_SHA}"
  
        echo "Creating version tag: $VERSION_TAG"
        git config --global user.email "ci-bot@github.com"
        git config --global user.name "CI Bot"
        git tag $VERSION_TAG
  
        echo "Updating floating tag: stg-stable"
        git tag -f stg-stable
  
        git push origin $VERSION_TAG
        git push origin -f stg-stable
