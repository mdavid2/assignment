name: QA & STG CI Pipeline

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

jobs:
  build-qa:
    name: Build QA
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - run: npm install

  deploy-qa:
    name: Deploy QA
    runs-on: ubuntu-latest
    needs: build-qa
    if: ${{ needs.build-qa.result == 'success' }}

    steps:
    - name: Deploy QA
      run: echo "Deploying to QA environment..."

  test-qa:
    name: Test QA
    runs-on: ubuntu-latest
    needs: deploy-qa
    if: ${{ needs.deploy-qa.result == 'success' }}

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - run: npm install
    
    - name: Start QA server
      run: |
        node server.js &
        sleep 3
    
    - name: Run QA health check
      run: |
        chmod +x test.sh
        ./test.sh
    
    - name: Stop QA server
      run: pkill -f "node server.js" || true

  rollback-qa:
    name: Rollback QA
    runs-on: ubuntu-latest
    needs: test-qa
    if: ${{ needs.test-qa.result == 'failure' }}

    steps:
    - run: echo "Rolling back QA..."
    - run: |
        git fetch --tags
        LAST_TAG=$(git tag --sort=-creatordate | grep '^qa-' | head -n 1)
        echo "Checking out $LAST_TAG"
        git checkout $LAST_TAG
        # deploy to QA

  tag-qa:
    name: Tag QA Release
    runs-on: ubuntu-latest
    needs: test-qa
    if: ${{ needs.test-qa.result == 'success' }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Tag successful QA commit
      run: |
        TAG="qa-$(date +'%Y%m%d')-${{ github.sha }}"
        echo "Tagging release as $TAG"
        git config --global user.email "ci-bot@github.com"
        git config --global user.name "CI Bot"
        git tag $TAG
        git push origin $TAG
  
  build-stg:
    name: Build STG
    runs-on: ubuntu-latest
    needs: test-qa
    if: ${{ needs.test-qa.result == 'success' }}

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - run: npm install

  deploy-stg:
    name: Deploy STG
    runs-on: ubuntu-latest
    needs: build-stg
    if: ${{ needs.build-stg.result == 'success' }}

    steps:
    - name: Deploy STG
      run: echo "Deploying to STG environment..."
      
  test-stg:
    name: Test STG
    runs-on: ubuntu-latest
    needs: deploy-stg
    if: ${{ needs.deploy-stg.result == 'success' }}

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - run: npm install
    
    - name: Start STG server
      run: |
        node server.js &
        sleep 3
    
    - name: Run STG health check
      run: |
        chmod +x test.sh
        ./test.sh
    
    - name: Stop STG server
      run: pkill -f "node server.js" || true
  
  rollback-stg:
    name: Rollback STG
    runs-on: ubuntu-latest
    needs: test-stg
    if: ${{ needs.test-stg.result == 'failure' }}

    steps:
    - run: echo "Rolling back STG..."
    - run: |
        git fetch --tags
        LAST_TAG=$(git tag --sort=-creatordate | grep '^stg-' | head -n 1)
        echo "Checking out $LAST_TAG"
        git checkout $LAST_TAG
        # deploy to STG

  tag-stg:
    name: Tag STG Release
    runs-on: ubuntu-latest
    needs: test-stg
    if: ${{ needs.test-stg.result == 'success' }}
    environment: STG
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Tag successful STG commit
      run: |
        TAG="stg-$(date +'%Y%m%d')-${{ github.sha }}"
        echo "Tagging release as $TAG"
        git config --global user.email "ci-bot@github.com"
        git config --global user.name "CI Bot"
        git tag $TAG
        git push origin $TAG
